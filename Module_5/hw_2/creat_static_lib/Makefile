# Makefile for main.bin project (создание проекта из многих файлов)


# Для компиляции нашего основного файла main.c надо сообщить компилятору, 
# что надо использовать библиотеки. 
# Чтобы компилятор знал где искать библиотеки ему надо сообщить каталог, 
# в котором они содержатся и список этих билиотек.
# Каталог с библиотеками указывается ключом -L, в нашем случае библиотека находится в текущем каталоге, 
# значит путь до нее будет в виде точки (-L.). 
# Используемые библиотеки перечисляются через ключ -l, 
# после которого указывается название библиотеки без префикса lib и окончания .a. 
# В нашем случае этот ключ будет выглядеть, как -lfs.

# ДЛЯ ИЗМЕНЕНИЯ АРГУМЕНТА ЗАПУСКАЕМОЙ ПРОГРАММЫ ИЗМЕНИТЕ ЗНАЧЕНИЕ VAR 
var=123

main.bin: main.o libfs.a 
	@gcc main.o -L. -lfs -o main.bin
	@./main.bin $(var)

# Создание объектных файлов
main.o: main.c
	@gcc -c main.c

f1.o: f1.c
	@gcc -c f1.c

f2.o: f2.c
	@gcc -c f2.c

# ranlib нужен для того, чтобы добaвить индекс к архиву (место, где объявлены все функции)
libfs: libfs.a
	@ranlib libfs.a
# Создание архива библиотеки из объектных файлов
# с(create) - создает файл, если его еще нет
# r(replace) - заменяет старые объектные файлы новыми версиями
# libfs.a - лишь архивный файл
# lib____ - lib должен присутствовать обязательно
libfs.a: f1.o f2.o
	@ar rc libfs.a f1.o f2.o

clean:
	@rm -f *.o *.a main.bin

start:
	@./main.bin $(var)

